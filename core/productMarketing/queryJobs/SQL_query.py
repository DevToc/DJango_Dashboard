import pandas as pd
from ..models import *

from sqlite3 import Error
import pandasql as ps
from productMarketingDwh.models import *


# unpivot the BoUp table
def restructure_single(boup_id):
    print("restructuring")
    df_boup = pd.DataFrame(list(BoUp.objects.filter(id=boup_id).values()))
    df_boup.to_csv("./df_boup.csv")
    df_boup = df_boup.reset_index(drop=True)
    print("Boup Entries", df_boup)
    df_unpivot_1 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["vol2020",
                                       "vol2021",
                                       "vol2022",
                                       "vol2023",
                                       "vol2024",
                                       "vol2025",
                                       "vol2026",
                                       "vol2027",
                                       "vol2028",
                                       "vol2029",
                                       "vol2030",
                                       "vol2031",
                                       "vol2032",
                                       "vol2033",
                                       "vol2034",
                                       "vol2035",
                                       "vol2036",
                                       "vol2037",
                                       "vol2038",
                                       "vol2039",
                                       "vol2040",
                                       "vol2041",
                                       "vol2042",
                                       "vol2043",
                                       "vol2044"],
                           var_name='year', value_name='vol')
# df_unpivot_1.to_csv("test.csv")
    df_unpivot_1["year"] = [int(x[-4:]) for x in df_unpivot_1['year']]


    df_unpivot_2 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["volCustomer2020",
                                       "volCustomer2021",
                                       "volCustomer2022",
                                       "volCustomer2023",
                                       "volCustomer2024",
                                       "volCustomer2025",
                                       "volCustomer2026",
                                       "volCustomer2027",
                                       "volCustomer2028",
                                       "volCustomer2029",
                                       "volCustomer2030",
                                       "volCustomer2031",
                                       "volCustomer2032",
                                       "volCustomer2033",
                                       "volCustomer2034",
                                       "volCustomer2035",
                                       "volCustomer2036",
                                       "volCustomer2037",
                                       "volCustomer2038",
                                       "volCustomer2039",
                                       "volCustomer2040",
                                       "volCustomer2041",
                                       "volCustomer2042",
                                       "volCustomer2043",
                                       "volCustomer2044"],
                           var_name='year', value_name='volCustomer')
# df_unpivot_2.to_csv("test.csv")
    df_unpivot_2["year"] = [int(x[-4:]) for x in df_unpivot_2['year']]
# print(df_unpivot_2[["id","year", "volCustomer" ]])

    df_unpivot_3 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["price2020",
                                       "price2021",
                                       "price2022",
                                       "price2023",
                                       "price2024",
                                       "price2025",
                                       "price2026",
                                       "price2027",
                                       "price2028",
                                       "price2029",
                                       "price2030",
                                       "price2031",
                                       "price2032",
                                       "price2033",
                                       "price2034",
                                       "price2035",
                                       "price2036",
                                       "price2037",
                                       "price2038",
                                       "price2039",
                                       "price2040",
                                       "price2041",
                                       "price2042",
                                       "price2043",
                                       "price2044"],
                           var_name='year', value_name='price')
# df_unpivot_3.to_csv("test.csv")
    df_unpivot_3["year"] = [int(x[-4:]) for x in df_unpivot_3['year']]
# print(df_unpivot_3[["id","year", "price" ]])

    df_unpivot_4 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["vhk2020",
                                       "vhk2021",
                                       "vhk2022",
                                       "vhk2023",
                                       "vhk2024",
                                       "vhk2025",
                                       "vhk2026",
                                       "vhk2027",
                                       "vhk2028",
                                       "vhk2029",
                                       "vhk2030",
                                       "vhk2031",
                                       "vhk2032",
                                       "vhk2033",
                                       "vhk2034",
                                       "vhk2035",
                                       "vhk2036",
                                       "vhk2037",
                                       "vhk2038",
                                       "vhk2039",
                                       "vhk2040",
                                       "vhk2041",
                                       "vhk2042",
                                       "vhk2043",
                                       "vhk2044"],
                           var_name='year', value_name='vhk')
# df_unpivot_4.to_csv("test.csv")
    df_unpivot_4["year"] = [int(x[-4:]) for x in df_unpivot_4['year']]
# print(df_unpivot_4[["id","year", "vhk" ]])

    df_unpivot_5 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["gm2020",
                                       "gm2021",
                                       "gm2022",
                                       "gm2023",
                                       "gm2024",
                                       "gm2025",
                                       "gm2026",
                                       "gm2027",
                                       "gm2028",
                                       "gm2029",
                                       "gm2030",
                                       "gm2031",
                                       "gm2032",
                                       "gm2033",
                                       "gm2034",
                                       "gm2035",
                                       "gm2036",
                                       "gm2037",
                                       "gm2038",
                                       "gm2039",
                                       "gm2040",
                                       "gm2041",
                                       "gm2042",
                                       "gm2043",
                                       "gm2044"],
                           var_name='year', value_name='gm')
# df_unpivot_5.to_csv("test.csv")
    df_unpivot_5["year"] = [int(x[-4:]) for x in df_unpivot_5['year']]
# print(df_unpivot_5[["id","year", "gm" ]])

    df_unpivot_6 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["wVol2020",
                                       "wVol2021",
                                       "wVol2022",
                                       "wVol2023",
                                       "wVol2024",
                                       "wVol2025",
                                       "wVol2026",
                                       "wVol2027",
                                       "wVol2028",
                                       "wVol2029",
                                       "wVol2030",
                                       "wVol2031",
                                       "wVol2032",
                                       "wVol2033",
                                       "wVol2034",
                                       "wVol2035",
                                       "wVol2036",
                                       "wVol2037",
                                       "wVol2038",
                                       "wVol2039",
                                       "wVol2040",
                                       "wVol2041",
                                       "wVol2042",
                                       "wVol2043",
                                       "wVol2044"],
                           var_name='year', value_name='wVol')
# df_unpivot_6.to_csv("test.csv")
    df_unpivot_6["year"] = [int(x[-4:]) for x in df_unpivot_6['year']]
# print(df_unpivot_6[["id","year", "wVol" ]])

    df_unpivot_7 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["wRev2020",
                                       "wRev2021",
                                       "wRev2022",
                                       "wRev2023",
                                       "wRev2024",
                                       "wRev2025",
                                       "wRev2026",
                                       "wRev2027",
                                       "wRev2028",
                                       "wRev2029",
                                       "wRev2030",
                                       "wRev2031",
                                       "wRev2032",
                                       "wRev2033",
                                       "wRev2034",
                                       "wRev2035",
                                       "wRev2036",
                                       "wRev2037",
                                       "wRev2038",
                                       "wRev2039",
                                       "wRev2040",
                                       "wRev2041",
                                       "wRev2042",
                                       "wRev2043",
                                       "wRev2044"],
                           var_name='year', value_name='wRev')
# df_unpivot_7.to_csv("test.csv")
    df_unpivot_7["year"] = [int(x[-4:]) for x in df_unpivot_7['year']]
# print(df_unpivot_7[["id","year", "wRev" ]])

    df_unpivot_8 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["fy_vol2020",
                                       "fy_vol2021",
                                       "fy_vol2022",
                                       "fy_vol2023",
                                       "fy_vol2024",
                                       "fy_vol2025",
                                       "fy_vol2026",
                                       "fy_vol2027",
                                       "fy_vol2028",
                                       "fy_vol2029",
                                       "fy_vol2030",
                                       "fy_vol2031",
                                       "fy_vol2032",
                                       "fy_vol2033",
                                       "fy_vol2034",
                                       "fy_vol2035",
                                       "fy_vol2036",
                                       "fy_vol2037",
                                       "fy_vol2038",
                                       "fy_vol2039",
                                       "fy_vol2040",
                                       "fy_vol2041",
                                       "fy_vol2042",
                                       "fy_vol2043",
                                       "fy_vol2044"],
                           var_name='year', value_name='fy_vol')
# df_unpivot_8.to_csv("test.csv")
    df_unpivot_8["year"] = [int(x[-4:]) for x in df_unpivot_8['year']]

    df_unpivot_9 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["fy_gm2020",
                                       "fy_gm2021",
                                       "fy_gm2022",
                                       "fy_gm2023",
                                       "fy_gm2024",
                                       "fy_gm2025",
                                       "fy_gm2026",
                                       "fy_gm2027",
                                       "fy_gm2028",
                                       "fy_gm2029",
                                       "fy_gm2030",
                                       "fy_gm2031",
                                       "fy_gm2032",
                                       "fy_gm2033",
                                       "fy_gm2034",
                                       "fy_gm2035",
                                       "fy_gm2036",
                                       "fy_gm2037",
                                       "fy_gm2038",
                                       "fy_gm2039",
                                       "fy_gm2040",
                                       "fy_gm2041",
                                       "fy_gm2042",
                                       "fy_gm2043",
                                       "fy_gm2044"],
                           var_name='year', value_name='m_gm')
# df_unpivot_9.to_csv("test.csv")
    df_unpivot_9["year"] = [int(x[-4:]) for x in df_unpivot_9['year']]
# print(df_unpivot_9[["id","year", "m_gm" ]])

    df_unpivot_10 = pd.melt(df_boup,
                            id_vars=["id",
                                     "Reviewed",
                                     "reviewDate",
                                     "ID_APP_id",
                                     "applicationLine",
                                     "productMarketer_id",
                                     "hfg",
                                     "ppos",
                                     "spNumber",
                                     "applicationMain_id",
                                     "applicationDetail_id",
                                     "rfp_id",
                                     "salesName_id",
                                     "priceSource",
                                     "familyPriceApplicable",
                                     "familyPriceDetails",
                                     "priceType",
                                     "currency",
                                     "fxRate",
                                     "comment",
                                     "region",
                                     "projectName",
                                     "mainCustomer_id",
                                     "endCustomer_id",
                                     "distributor_id",
                                     "tier1_id",
                                     "oem_id",
                                     "ems_id",
                                     "vpaCustomer_id",
                                     "dragonId",
                                     "salesContact",
                                     "probability",
                                     "statusProbability",
                                     "sop",
                                     "availablePGS",
                                     "modifiedBy_id",
                                     "modifiedDate",
                                     "creationDate",
                                     "timeBottomUp",
                                     "basicType",
                                     "package",
                                     "series",
                                     "gen",
                                     "seriesLong",
                                     "genDetail",
                                     "gmLifeTime",
                                     "revEurLifeTime",
                                     "volLifeTime",
                                     "volWeightedLifeTime"
                                     ],
                            value_vars=["fy_wVol2020",
                                        "fy_wVol2021",
                                        "fy_wVol2022",
                                        "fy_wVol2023",
                                        "fy_wVol2024",
                                        "fy_wVol2025",
                                        "fy_wVol2026",
                                        "fy_wVol2027",
                                        "fy_wVol2028",
                                        "fy_wVol2029",
                                        "fy_wVol2030",
                                        "fy_wVol2031",
                                        "fy_wVol2032",
                                        "fy_wVol2033",
                                        "fy_wVol2034",
                                        "fy_wVol2035",
                                        "fy_wVol2036",
                                        "fy_wVol2037",
                                        "fy_wVol2038",
                                        "fy_wVol2039",
                                        "fy_wVol2040",
                                        "fy_wVol2041",
                                        "fy_wVol2042",
                                        "fy_wVol2043",
                                        "fy_wVol2044"],
                            var_name='year', value_name='fy_wVol')
# df_unpivot_10.to_csv("test.csv")
    df_unpivot_10["year"] = [int(x[-4:]) for x in df_unpivot_10['year']]
# print(df_unpivot_10[["id","year", "fy_wVol" ]])

    df_unpivot_11 = pd.melt(df_boup,
                            id_vars=["id",
                                     "Reviewed",
                                     "reviewDate",
                                     "ID_APP_id",
                                     "applicationLine",
                                     "productMarketer_id",
                                     "hfg",
                                     "ppos",
                                     "spNumber",
                                     "applicationMain_id",
                                     "applicationDetail_id",
                                     "rfp_id",
                                     "salesName_id",
                                     "priceSource",
                                     "familyPriceApplicable",
                                     "familyPriceDetails",
                                     "priceType",
                                     "currency",
                                     "fxRate",
                                     "comment",
                                     "region",
                                     "projectName",
                                     "mainCustomer_id",
                                     "endCustomer_id",
                                     "distributor_id",
                                     "tier1_id",
                                     "oem_id",
                                     "ems_id",
                                     "vpaCustomer_id",
                                     "dragonId",
                                     "salesContact",
                                     "probability",
                                     "statusProbability",
                                     "sop",
                                     "availablePGS",
                                     "modifiedBy_id",
                                     "modifiedDate",
                                     "creationDate",
                                     "timeBottomUp",
                                     "basicType",
                                     "package",
                                     "series",
                                     "gen",
                                     "seriesLong",
                                     "genDetail",
                                     "gmLifeTime",
                                     "revEurLifeTime",
                                     "volLifeTime",
                                     "volWeightedLifeTime"
                                     ],
                            value_vars=["fy_wRev2020",
                                        "fy_wRev2021",
                                        "fy_wRev2022",
                                        "fy_wRev2023",
                                        "fy_wRev2024",
                                        "fy_wRev2025",
                                        "fy_wRev2026",
                                        "fy_wRev2027",
                                        "fy_wRev2028",
                                        "fy_wRev2029",
                                        "fy_wRev2030",
                                        "fy_wRev2031",
                                        "fy_wRev2032",
                                        "fy_wRev2033",
                                        "fy_wRev2034",
                                        "fy_wRev2035",
                                        "fy_wRev2036",
                                        "fy_wRev2037",
                                        "fy_wRev2038",
                                        "fy_wRev2039",
                                        "fy_wRev2040",
                                        "fy_wRev2041",
                                        "fy_wRev2042",
                                        "fy_wRev2043",
                                        "fy_wRev2044"],
                            var_name='year', value_name='fy_wRev')
# df_unpivot_11.to_csv("test.csv")
    df_unpivot_11["year"] = [int(x[-4:]) for x in df_unpivot_11['year']]
# print(df_unpivot_11[["id","year", "fy_wRev" ]])

    key_list = ["id",
                "Reviewed",
                "reviewDate",
                "ID_APP_id",
                "applicationLine",
                "productMarketer_id",
                "hfg",
                "ppos",
                "spNumber",
                "applicationMain_id",
                "applicationDetail_id",
                "rfp_id",
                "salesName_id",
                "priceSource",
                "familyPriceApplicable",
                "familyPriceDetails",
                "priceType",
                "currency",
                "fxRate",
                "comment",
                "region",
                "projectName",
                "mainCustomer_id",
                "endCustomer_id",
                "distributor_id",
                "tier1_id",
                "oem_id",
                "ems_id",
                "vpaCustomer_id",
                "dragonId",
                "salesContact",
                "probability",
                "statusProbability",
                "sop",
                "availablePGS",
                "modifiedBy_id",
                "modifiedDate",
                "creationDate",
                "timeBottomUp",
                "basicType",
                "package",
                "series",
                "gen",
                "seriesLong",
                "genDetail",
                "gmLifeTime",
                "revEurLifeTime",
                "volLifeTime",
                "volWeightedLifeTime",
                "year"]
    total_df = pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(df_unpivot_1, df_unpivot_2, on=key_list), df_unpivot_3, on=key_list), df_unpivot_4, on=key_list),
                        df_unpivot_5, on=key_list), df_unpivot_6, on=key_list), df_unpivot_7, on=key_list), df_unpivot_8, on=key_list), df_unpivot_9, on=key_list), df_unpivot_10, on=key_list), df_unpivot_11, on=key_list)

    total_df.to_csv("unpivBoUp.csv", sep=";", decimal=",")

    return total_df


def restructure_whole():
    df_boup = pd.DataFrame(list(BoUp.objects.all().values()))
    #print("Boup Columns", df_boup.columns)
    df_unpivot_1 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "endCustomerHelper",
                                    "mainCustomerHelper",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["vol2020",
                                       "vol2021",
                                       "vol2022",
                                       "vol2023",
                                       "vol2024",
                                       "vol2025",
                                       "vol2026",
                                       "vol2027",
                                       "vol2028",
                                       "vol2029",
                                       "vol2030",
                                       "vol2031",
                                       "vol2032",
                                       "vol2033",
                                       "vol2034",
                                       "vol2035",
                                       "vol2036",
                                       "vol2037",
                                       "vol2038",
                                       "vol2039",
                                       "vol2040",
                                       "vol2041",
                                       "vol2042",
                                       "vol2043",
                                       "vol2044"],
                           var_name='year', value_name='vol')
    # df_unpivot_1.to_csv("test.csv")
    df_unpivot_1["year"] = [int(x[-4:]) for x in df_unpivot_1['year']]
    #print(df_unpivot_1[["id","year", "vol" ]])

    df_unpivot_2 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "endCustomerHelper",
                                    "mainCustomerHelper",
                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["volCustomer2020",
                                       "volCustomer2021",
                                       "volCustomer2022",
                                       "volCustomer2023",
                                       "volCustomer2024",
                                       "volCustomer2025",
                                       "volCustomer2026",
                                       "volCustomer2027",
                                       "volCustomer2028",
                                       "volCustomer2029",
                                       "volCustomer2030",
                                       "volCustomer2031",
                                       "volCustomer2032",
                                       "volCustomer2033",
                                       "volCustomer2034",
                                       "volCustomer2035",
                                       "volCustomer2036",
                                       "volCustomer2037",
                                       "volCustomer2038",
                                       "volCustomer2039",
                                       "volCustomer2040",
                                       "volCustomer2041",
                                       "volCustomer2042",
                                       "volCustomer2043",
                                       "volCustomer2044"],
                           var_name='year', value_name='volCustomer')
    # df_unpivot_2.to_csv("test.csv")
    df_unpivot_2["year"] = [int(x[-4:]) for x in df_unpivot_2['year']]
    #print(df_unpivot_2[["id","year", "volCustomer" ]])

    df_unpivot_3 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["price2020",
                                       "price2021",
                                       "price2022",
                                       "price2023",
                                       "price2024",
                                       "price2025",
                                       "price2026",
                                       "price2027",
                                       "price2028",
                                       "price2029",
                                       "price2030",
                                       "price2031",
                                       "price2032",
                                       "price2033",
                                       "price2034",
                                       "price2035",
                                       "price2036",
                                       "price2037",
                                       "price2038",
                                       "price2039",
                                       "price2040",
                                       "price2041",
                                       "price2042",
                                       "price2043",
                                       "price2044"],
                           var_name='year', value_name='price')
    # df_unpivot_3.to_csv("test.csv")
    df_unpivot_3["year"] = [int(x[-4:]) for x in df_unpivot_3['year']]
    #print(df_unpivot_3[["id","year", "price" ]])

    df_unpivot_4 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",

                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["vhk2020",
                                       "vhk2021",
                                       "vhk2022",
                                       "vhk2023",
                                       "vhk2024",
                                       "vhk2025",
                                       "vhk2026",
                                       "vhk2027",
                                       "vhk2028",
                                       "vhk2029",
                                       "vhk2030",
                                       "vhk2031",
                                       "vhk2032",
                                       "vhk2033",
                                       "vhk2034",
                                       "vhk2035",
                                       "vhk2036",
                                       "vhk2037",
                                       "vhk2038",
                                       "vhk2039",
                                       "vhk2040",
                                       "vhk2041",
                                       "vhk2042",
                                       "vhk2043",
                                       "vhk2044"],
                           var_name='year', value_name='vhk')
    # df_unpivot_4.to_csv("test.csv")
    df_unpivot_4["year"] = [int(x[-4:]) for x in df_unpivot_4['year']]
    #print(df_unpivot_4[["id","year", "vhk" ]])

    df_unpivot_5 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["gm2020",
                                       "gm2021",
                                       "gm2022",
                                       "gm2023",
                                       "gm2024",
                                       "gm2025",
                                       "gm2026",
                                       "gm2027",
                                       "gm2028",
                                       "gm2029",
                                       "gm2030",
                                       "gm2031",
                                       "gm2032",
                                       "gm2033",
                                       "gm2034",
                                       "gm2035",
                                       "gm2036",
                                       "gm2037",
                                       "gm2038",
                                       "gm2039",
                                       "gm2040",
                                       "gm2041",
                                       "gm2042",
                                       "gm2043",
                                       "gm2044"],
                           var_name='year', value_name='gm')
    # df_unpivot_5.to_csv("test.csv")
    df_unpivot_5["year"] = [int(x[2:]) for x in df_unpivot_5['year']]
    #print(df_unpivot_5[["id","year", "gm" ]])

    df_unpivot_6 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",

                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["wVol2020",
                                       "wVol2021",
                                       "wVol2022",
                                       "wVol2023",
                                       "wVol2024",
                                       "wVol2025",
                                       "wVol2026",
                                       "wVol2027",
                                       "wVol2028",
                                       "wVol2029",
                                       "wVol2030",
                                       "wVol2031",
                                       "wVol2032",
                                       "wVol2033",
                                       "wVol2034",
                                       "wVol2035",
                                       "wVol2036",
                                       "wVol2037",
                                       "wVol2038",
                                       "wVol2039",
                                       "wVol2040",
                                       "wVol2041",
                                       "wVol2042",
                                       "wVol2043",
                                       "wVol2044"],
                           var_name='year', value_name='wVol')
    # df_unpivot_6.to_csv("test.csv")
    df_unpivot_6["year"] = [int(x[-4:]) for x in df_unpivot_6['year']]
    #print(df_unpivot_6[["id","year", "wVol" ]])

    df_unpivot_7 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "endCustomerHelper",
                                    "mainCustomerHelper",


                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["wRev2020",
                                       "wRev2021",
                                       "wRev2022",
                                       "wRev2023",
                                       "wRev2024",
                                       "wRev2025",
                                       "wRev2026",
                                       "wRev2027",
                                       "wRev2028",
                                       "wRev2029",
                                       "wRev2030",
                                       "wRev2031",
                                       "wRev2032",
                                       "wRev2033",
                                       "wRev2034",
                                       "wRev2035",
                                       "wRev2036",
                                       "wRev2037",
                                       "wRev2038",
                                       "wRev2039",
                                       "wRev2040",
                                       "wRev2041",
                                       "wRev2042",
                                       "wRev2043",
                                       "wRev2044"],
                           var_name='year', value_name='wRev')
    # df_unpivot_7.to_csv("test.csv")
    df_unpivot_7["year"] = [int(x[-4:]) for x in df_unpivot_7['year']]
    #print(df_unpivot_7[["id","year", "wRev" ]])

    df_unpivot_8 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["fy_vol2020",
                                       "fy_vol2021",
                                       "fy_vol2022",
                                       "fy_vol2023",
                                       "fy_vol2024",
                                       "fy_vol2025",
                                       "fy_vol2026",
                                       "fy_vol2027",
                                       "fy_vol2028",
                                       "fy_vol2029",
                                       "fy_vol2030",
                                       "fy_vol2031",
                                       "fy_vol2032",
                                       "fy_vol2033",
                                       "fy_vol2034",
                                       "fy_vol2035",
                                       "fy_vol2036",
                                       "fy_vol2037",
                                       "fy_vol2038",
                                       "fy_vol2039",
                                       "fy_vol2040",
                                       "fy_vol2041",
                                       "fy_vol2042",
                                       "fy_vol2043",
                                       "fy_vol2044"],
                           var_name='year', value_name='fy_vol')
    # df_unpivot_8.to_csv("test.csv")
    df_unpivot_8["year"] = [int(x[-4:]) for x in df_unpivot_8['year']]
    #print("hellow", df_unpivot_8)

    df_unpivot_9 = pd.melt(df_boup,
                           id_vars=["id",
                                    "Reviewed",
                                    "reviewDate",
                                    "ID_APP_id",
                                    "applicationLine",
                                    "productMarketer_id",
                                    "hfg",
                                    "ppos",
                                    "spNumber",
                                    "applicationMain_id",
                                    "applicationDetail_id",
                                    "rfp_id",
                                    "salesName_id",
                                    "priceSource",
                                    "familyPriceApplicable",
                                    "familyPriceDetails",
                                    "priceType",
                                    "currency",
                                    "fxRate",
                                    "comment",
                                    "region",
                                    "projectName",
                                    "mainCustomer_id",
                                    "endCustomer_id",
                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                                    "distributor_id",
                                    "tier1_id",
                                    "oem_id",
                                    "ems_id",
                                    "vpaCustomer_id",
                                    "dragonId",
                                    "salesContact",
                                    "probability",
                                    "statusProbability",
                                    "sop",
                                    "availablePGS",
                                    "modifiedBy_id",
                                    "modifiedDate",
                                    "creationDate",
                                    "timeBottomUp",
                                    "basicType",
                                    "package",
                                    "series",
                                    "gen",
                                    "seriesLong",
                                    "genDetail",
                                    "gmLifeTime",
                                    "revEurLifeTime",
                                    "volLifeTime",
                                    "volWeightedLifeTime"
                                    ],
                           value_vars=["fy_gm2020",
                                       "fy_gm2021",
                                       "fy_gm2022",
                                       "fy_gm2023",
                                       "fy_gm2024",
                                       "fy_gm2025",
                                       "fy_gm2026",
                                       "fy_gm2027",
                                       "fy_gm2028",
                                       "fy_gm2029",
                                       "fy_gm2030",
                                       "fy_gm2031",
                                       "fy_gm2032",
                                       "fy_gm2033",
                                       "fy_gm2034",
                                       "fy_gm2035",
                                       "fy_gm2036",
                                       "fy_gm2037",
                                       "fy_gm2038",
                                       "fy_gm2039",
                                       "fy_gm2040",
                                       "fy_gm2041",
                                       "fy_gm2042",
                                       "fy_gm2043",
                                       "fy_gm2044"],
                           var_name='year', value_name='fy_gm')
    # df_unpivot_9.to_csv("test.csv")
    df_unpivot_9["year"] = [int(x[-4:]) for x in df_unpivot_9['year']]
    #print(df_unpivot_9[["id","year", "m_gm" ]])

    df_unpivot_10 = pd.melt(df_boup,
                            id_vars=["id",
                                     "Reviewed",
                                     "reviewDate",
                                     "ID_APP_id",
                                     "applicationLine",
                                     "productMarketer_id",
                                     "hfg",
                                     "ppos",
                                     "spNumber",
                                     "applicationMain_id",
                                     "applicationDetail_id",
                                     "rfp_id",
                                     "salesName_id",
                                     "priceSource",
                                     "familyPriceApplicable",
                                     "familyPriceDetails",
                                     "priceType",
                                     "currency",
                                     "fxRate",
                                     "comment",
                                     "region",
                                     "projectName",
                                     "mainCustomer_id",
                                     "endCustomer_id",
                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                                     "distributor_id",
                                     "tier1_id",
                                     "oem_id",
                                     "ems_id",
                                     "vpaCustomer_id",
                                     "dragonId",
                                     "salesContact",
                                     "probability",
                                     "statusProbability",
                                     "sop",
                                     "availablePGS",
                                     "modifiedBy_id",
                                     "modifiedDate",
                                     "creationDate",
                                     "timeBottomUp",
                                     "basicType",
                                     "package",
                                     "series",
                                     "gen",
                                     "seriesLong",
                                     "genDetail",
                                     "gmLifeTime",
                                     "revEurLifeTime",
                                     "volLifeTime",
                                     "volWeightedLifeTime"
                                     ],
                            value_vars=["fy_wVol2020",
                                        "fy_wVol2021",
                                        "fy_wVol2022",
                                        "fy_wVol2023",
                                        "fy_wVol2024",
                                        "fy_wVol2025",
                                        "fy_wVol2026",
                                        "fy_wVol2027",
                                        "fy_wVol2028",
                                        "fy_wVol2029",
                                        "fy_wVol2030",
                                        "fy_wVol2031",
                                        "fy_wVol2032",
                                        "fy_wVol2033",
                                        "fy_wVol2034",
                                        "fy_wVol2035",
                                        "fy_wVol2036",
                                        "fy_wVol2037",
                                        "fy_wVol2038",
                                        "fy_wVol2039",
                                        "fy_wVol2040",
                                        "fy_wVol2041",
                                        "fy_wVol2042",
                                        "fy_wVol2043",
                                        "fy_wVol2044"],
                            var_name='year', value_name='fy_wVol')
    # df_unpivot_10.to_csv("test.csv")
    df_unpivot_10["year"] = [int(x[-4:]) for x in df_unpivot_10['year']]
    #print(df_unpivot_10[["id","year", "fy_wVol" ]])

    df_unpivot_11 = pd.melt(df_boup,
                            id_vars=["id",
                                     "Reviewed",
                                     "reviewDate",
                                     "ID_APP_id",
                                     "applicationLine",
                                     "productMarketer_id",
                                     "hfg",
                                     "ppos",
                                     "spNumber",
                                     "applicationMain_id",
                                     "applicationDetail_id",
                                     "rfp_id",
                                     "salesName_id",
                                     "priceSource",
                                     "familyPriceApplicable",
                                     "familyPriceDetails",
                                     "priceType",
                                     "currency",
                                     "fxRate",
                                     "comment",
                                     "region",
                                     "projectName",
                                     "mainCustomer_id",
                                     "endCustomer_id",

                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                                     "distributor_id",
                                     "tier1_id",
                                     "oem_id",
                                     "ems_id",
                                     "vpaCustomer_id",
                                     "dragonId",
                                     "salesContact",
                                     "probability",
                                     "statusProbability",
                                     "sop",
                                     "availablePGS",
                                     "modifiedBy_id",
                                     "modifiedDate",
                                     "creationDate",
                                     "timeBottomUp",
                                     "basicType",
                                     "package",
                                     "series",
                                     "gen",
                                     "seriesLong",
                                     "genDetail",
                                     "gmLifeTime",
                                     "revEurLifeTime",
                                     "volLifeTime",
                                     "volWeightedLifeTime"
                                     ],
                            value_vars=["fy_wRev2020",
                                        "fy_wRev2021",
                                        "fy_wRev2022",
                                        "fy_wRev2023",
                                        "fy_wRev2024",
                                        "fy_wRev2025",
                                        "fy_wRev2026",
                                        "fy_wRev2027",
                                        "fy_wRev2028",
                                        "fy_wRev2029",
                                        "fy_wRev2030",
                                        "fy_wRev2031",
                                        "fy_wRev2032",
                                        "fy_wRev2033",
                                        "fy_wRev2034",
                                        "fy_wRev2035",
                                        "fy_wRev2036",
                                        "fy_wRev2037",
                                        "fy_wRev2038",
                                        "fy_wRev2039",
                                        "fy_wRev2040",
                                        "fy_wRev2041",
                                        "fy_wRev2042",
                                        "fy_wRev2043",
                                        "fy_wRev2044"],
                            var_name='year', value_name='fy_wRev')
    # df_unpivot_11.to_csv("test.csv")
    df_unpivot_11["year"] = [int(x[-4:]) for x in df_unpivot_11['year']]
    #print(df_unpivot_11[["id","year", "fy_wRev" ]])

    df_unpivot_12 = pd.melt(df_boup,
                            id_vars=["id",
                                     "Reviewed",
                                     "reviewDate",
                                     "ID_APP_id",
                                     "applicationLine",
                                     "productMarketer_id",
                                     "hfg",
                                     "ppos",
                                     "spNumber",
                                     "applicationMain_id",
                                     "applicationDetail_id",
                                     "rfp_id",
                                     "salesName_id",
                                     "priceSource",
                                     "familyPriceApplicable",
                                     "familyPriceDetails",
                                     "priceType",
                                     "currency",
                                     "fxRate",
                                     "comment",
                                     "region",
                                     "projectName",
                                     "mainCustomer_id",
                                     "endCustomer_id",

                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                                     "distributor_id",
                                     "tier1_id",
                                     "oem_id",
                                     "ems_id",
                                     "vpaCustomer_id",
                                     "dragonId",
                                     "salesContact",
                                     "probability",
                                     "statusProbability",
                                     "sop",
                                     "availablePGS",
                                     "modifiedBy_id",
                                     "modifiedDate",
                                     "creationDate",
                                     "timeBottomUp",
                                     "basicType",
                                     "package",
                                     "series",
                                     "gen",
                                     "seriesLong",
                                     "genDetail",
                                     "gmLifeTime",
                                     "revEurLifeTime",
                                     "volLifeTime",
                                     "volWeightedLifeTime"
                                     ],
                            value_vars=["asp2020",
                                        "asp2021",
                                        "asp2022",
                                        "asp2023",
                                        "asp2024",
                                        "asp2025",
                                        "asp2026",
                                        "asp2027",
                                        "asp2028",
                                        "asp2029",
                                        "asp2030",
                                        "asp2031",
                                        "asp2032",
                                        "asp2033",
                                        "asp2034",
                                        "asp2035",
                                        "asp2036",
                                        "asp2037",
                                        "asp2038",
                                        "asp2039",
                                        "asp2040",
                                        "asp2041",
                                        "asp2042",
                                        "asp2043",
                                        "asp2044"],
                            var_name='year', value_name='asp')
    # df_unpivot_12.to_csv("test.csv")
    df_unpivot_12["year"] = [int(x[-4:]) for x in df_unpivot_12['year']]
    #print(df_unpivot_12[["id","year", "asp" ]])

    key_list = ["id",
                "Reviewed",
                "reviewDate",
                "ID_APP_id",
                "applicationLine",
                "productMarketer_id",
                "hfg",
                "ppos",
                "spNumber",
                "applicationMain_id",
                "applicationDetail_id",
                "rfp_id",
                "salesName_id",
                "priceSource",
                "familyPriceApplicable",
                "familyPriceDetails",
                "priceType",
                "currency",
                "fxRate",
                "comment",
                "region",
                "projectName",
                "mainCustomer_id",
                "endCustomer_id",
                                    "endCustomerHelper",
                                    "mainCustomerHelper",

                "distributor_id",
                "tier1_id",
                "oem_id",
                "ems_id",
                "vpaCustomer_id",
                "dragonId",
                "salesContact",
                "probability",
                "statusProbability",
                "sop",
                "availablePGS",
                "modifiedBy_id",
                "modifiedDate",
                "creationDate",
                "timeBottomUp",
                "basicType",
                "package",
                "series",
                "gen",
                "seriesLong",
                "genDetail",
                "gmLifeTime",
                "revEurLifeTime",
                "volLifeTime",
                "volWeightedLifeTime",
                "year"]
    total_df = pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(pd.merge(df_unpivot_1, df_unpivot_2, on=key_list), df_unpivot_3, on=key_list), df_unpivot_4, on=key_list),
                        df_unpivot_5, on=key_list), df_unpivot_6, on=key_list), df_unpivot_7, on=key_list), df_unpivot_8, on=key_list), df_unpivot_9, on=key_list), df_unpivot_10, on=key_list), df_unpivot_11, on=key_list), df_unpivot_12, on = key_list)


    # print(total_df)
    #total_df.to_csv("unpivBoUp.csv", sep = ";", decimal=",")
    return total_df

# ##the queries which gives an array of dataframes back with the relevant informations

# each query gets the total_df which is done by a boup.id, so right now the SQL is used on the newest entry,
# if you want to have all entries you need to use the restructure method in view on all entries in BoUp not only the one which got just added

# ### req 73 & 74 & 75 & 76 & 77

# #Volume Forecast, asuming  the goal is to see the SUM of wVol
# #SUM(gm) needs to be adjusted to % value (what is the formula for the transition) and add GM@Pmin, GM@Pmax
# def sql_group_family_gen_series_endcustomer_year(df):

#     total_df = df
#     query_package = """
#     SELECT
#     gen, series, package, endCustomer_id, year,
#     AVG(wRev/wVol), MIN(wRev/wVol), MAX(wRev/wVol),
#     SUM(wVol),
#     SUM(gm), SUM(wRev),
#     SUM(vhk),
#     COUNT(DISTINCT(ID_APP_id))
#     FROM
#     total_df
#     GROUP BY
#     gen, series, package, endCustomer_id, year
#     ;
#     """


#     query_result_package = ps.sqldf(query_package, locals())

#     query_series = """
#     SELECT
#     gen, series, endCustomer_id, year,
#     AVG(wRev/wVol), MIN(wRev/wVol), MAX(wRev/wVol),
#     SUM(wVol),
#     SUM(gm), SUM(wRev),
#     SUM(vhk),
#     COUNT(DISTINCT(ID_APP_id))
#     FROM
#     total_df
#     GROUP BY
#     gen, series, endCustomer_id, year
#     ;
#     """

# Volume Forecast, asuming  the goal is to see the SUM of wVol
# SUM(gm) needs to be adjusted to % value (what is the formula for the transition) and add GM@Pmin, GM@Pmax
def sql_group_family_gen_series_endcustomer_year(df):
    print("this df is having the SQL statement:", df)
    total_df = df
    query_package = """
    SELECT 
    gen, series, package, endCustomer_id, year,
    AVG(wRev/wVol), MIN(wRev/wVol), MAX(wRev/wVol),
    SUM(wVol),
    SUM(gm), SUM(wRev),
    SUM(vhk),
    COUNT(DISTINCT(ID_APP_id))
    FROM 
    total_df 
    GROUP BY 
    gen, series, package, endCustomer_id, year
    ;
    """

    query_result_package = ps.sqldf(query_package, locals())

    query_series = """
    SELECT 
    gen, series, endCustomer_id, year,
    AVG(wRev/wVol), MIN(wRev/wVol), MAX(wRev/wVol),
    SUM(wVol),
    SUM(gm), SUM(wRev),
    SUM(vhk),
    COUNT(DISTINCT(ID_APP_id))
    FROM 
    total_df 
    GROUP BY 
    gen, series, endCustomer_id, year
    ;
    """

    query_result_series = ps.sqldf(query_series, locals())

    query_family = """
    SELECT 
    gen, endCustomer_id, year,
    AVG(wRev/wVol), MIN(wRev/wVol), MAX(wRev/wVol),
    SUM(wVol),
    SUM(gm), SUM(wRev),
    SUM(vhk),
    COUNT(DISTINCT(ID_APP_id))
    FROM 
    total_df 
    GROUP BY 
    gen, endCustomer_id, year
    ;
    """

    query_result_family = ps.sqldf(query_family, locals())

    query_results = [query_result_package,
                     query_result_series, query_result_family]
    # print("SQL result:",query_result_family)

    return query_results

# for req 78,79,80
# need to adjust GM into % same as above


def sql_group_series_endcustomer(df, sop, eop):  # vol , gm, rev

    total_df = df

    query_series_endCustomer = "                                      \
    SELECT                                                            \
    series, endCustomer_id,                                           \
    SUM(wVol), SUM(wRev), SUM(gm)                                     \
    FROM(                                                             \
        SELECT                                                        \
        gen, series, package, endCustomer_id, year,                   \
        SUM(wVol) as wVol,                                                    \
        SUM(gm) as gm, SUM(wRev) as wRev                                           \
        FROM                                                          \
        total_df                                                      \
        GROUP BY                                                      \
        gen, series, package, endCustomer_id, year                    \
        )                                                             \
    WHERE year >= " + str(sop) + " and year <= " + str(eop) + "       \
    GROUP BY                                                          \
    series, endCustomer_id                                            \
    ;                                                                 \
    "

    query_result_series_endCustomer = ps.sqldf(
        query_series_endCustomer, locals())

    query_series = "                                                  \
    SELECT                                                            \
    series,                                                           \
    SUM(wVol), SUM(wRev), SUM(gm)                                     \
    FROM(                                                             \
        SELECT                                                        \
        gen, series, package, endCustomer_id, year,                   \
        SUM(wVol) as wVol,                                                    \
        SUM(gm) as gm, SUM(wRev) as wRev                                           \
        FROM                                                          \
        total_df                                                      \
        GROUP BY                                                      \
        gen, series, package, endCustomer_id, year                    \
        )                                                             \
    WHERE year >= " + str(sop) + " and year <= " + str(eop) + "       \
    GROUP BY                                                          \
    series                                                            \
    ;                                                                 \
    "

    query_result_series = ps.sqldf(query_series, locals())

    query_endCustomer = "                                             \
    SELECT                                                            \
    endCustomer_id,                                                   \
    SUM(wVol), SUM(wRev), SUM(gm)                                     \
    FROM(                                                             \
        SELECT                                                        \
        gen, series, package, endCustomer_id, year,                   \
        SUM(wVol) as wVol,                                                    \
        SUM(gm) as gm, SUM(wRev) as wRev                                           \
        FROM                                                          \
        total_df                                                      \
        GROUP BY                                                      \
        gen, series, package, endCustomer_id, year                    \
        )                                                             \
    WHERE year >= " + str(sop) + " and year <= " + str(eop) + "       \
    GROUP BY                                                          \
     endCustomer_id                                                   \
    ;                                                                 \
    "

    query_result_endCustomer = ps.sqldf(query_endCustomer, locals())

    query_results = [query_result_series_endCustomer,
                     query_result_series, query_result_endCustomer]
    print("SQL result:", query_result_endCustomer)

    return query_results


def sqlitetest(df):

    total_df = df
    print("SQL TESTING", ps.sqldf("SELECT * FROM total_df", locals()))


'''
df =  pd.read_csv("test.csv", sep = ',') 

total_df= restructure(df)

sql_group_series_endcustomer(total_df, 2020, 2030)
sql_group_family_gen_series_endcustomer_year(total_df)
'''
